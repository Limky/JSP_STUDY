<%@page import="java.text.SimpleDateFormat"%>
<%@ page language="java" contentType="text/html; charset=EUC-KR"
    pageEncoding="EUC-KR"%>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=EUC-KR">
<title>Insert title here</title>
</head>
<body>


	<%--
		JSP 각각의 페이지는 정보를 공유하는 기능이 없기 때문에
		하나의 페이지가 가지고 있는 정보를 전달하고 받아야만
		정보를 인식한다. (비연결성)
		
		비연결성 특징을 해결하기 위한 방법 2가지 : 세션, 쿠키
		
		세션 : 웹 서버 측에서 접속한 클라이언트에 대하여
				브라우저 별로 특정 임시 저장 공간을 확보하는데
				이러한 공간을 세션이라고 한다.
				- 세션 저장 공간 사용은 웹서버가 직접 명령하며,
					저장된 공간의 정보 삭제는 클라이언트가 특정
					조건의 접속을 종료하거나, 기본적인 세션 타임
					(디폴트 30분) 중 재요청이 발생하지 않았을
					경우이다.
		
				- 세션에 저장된 정보의 기준 단위는
					클라이언트의 ip가 아니라 브라우저이므로,
					브라우저 별로 다른 처리가 발생된다.
					(예: 로그인 기능은 브라우저 별로 처리됨)
					
				- JSP 페이지에 session이라는 키워드(객체)가 
					숨겨져서 존재한다.
					(내장 객체 중 하나이다.)
					
				- 세션 객체 이용 방법 2가지
					1. request로부터 제공받는 방법(HttpSession)
					2. 내장 객체 session 키워드를 이용하는 방법
	 --%>
	 
	 <%
// 		1. HttpSession으로부터 세션 객체 이용
		
		HttpSession rcvSession = request.getSession();
	 
	 %>
	 
	 rcvSession = <%= rcvSession %> <br/>
	 session : <%= session %> <br/>
	 <hr/>
	 
	 
	 현재 브라우저에서 최초로 만들어진 세션인지 확인
	 	(새로 고침을 하면 
	 	최초로 만들어진 페이지가 아닌 것으로 인식됨)
	 	: <%= session.isNew() %> <br/> <br/>
	 	
	 세션의 생성 시간 확인(결과 제공 형태 : long - micro seconds)
	 	: <%= session.getCreationTime() %> <br/><br/>
	 	
	 <%
	 	SimpleDateFormat sdf = new SimpleDateFormat(
	 								"yyyy-MM-dd hh:mm:ss");
	 	String ctime = sdf.format(session.getCreationTime());
	 %>
	 생성 시간 확인2 : <%= ctime %> <br/><br/>
	 
	 세션 최초 생성 후 경과된 시간 확인(결과 제공 형태 : long)
	 	<%
	 		// 현재 시간 - 세션 생성 시간
	 		long now = System.currentTimeMillis();
	 		long created = session.getCreationTime();
	 		long passed = (now - created) / 1000;
	 	%>
	 	: <%= passed %> <br/><br/>
	 	
	 	
	현재 설정되어 있는 세션 유지 시간 정보 확인
		: <%= session.getMaxInactiveInterval() %>초 <br/> 



</body>
</html>

















